(defwidget w_city []
  (box :orientation "h"
    :space-evenly "true"
    :class "weather-top"
    (label :class "weather-location"
      :halign "start"
      :valign "start"
      :text weather_city
    )
    (label :class "weather-update"
      :halign "end"
      :valign "start"
      :text " ${weather_update ?: "0"} min. ago"
    )
  )
)

(defwidget w_sun []
  (box :orientation "v"
    :space-evenly "false"
    :valign "center"
    :halign "start"
    :class "weather-sun"
    (box :orientation "h"
      :space-evenly "false"
      :spacing 5
      (label :class "weather-rise-icon"
        :text "󰖜"
      )
      (label :class "weather-rise-text"
        :text "${weather_sunr}"
      )
    )
    (box :orientation "h"
      :space-evenly "false"
      :spacing 5
      (label :class "weather-set-icon"
        :text "󰖛"
      )
      (label :class "weather-set-text"
        :text "${weather_suns}"
      )
    )
  )
)

(defwidget w_temp []
  (box :orientation "h"
    :space-evenly "false"
    :halign "center"
    (label
      :class "weather-temp ${
        weather_temp < 32 ? 'less' :
        weather_temp > 89 ? 'more' :
                            ''
      }"
      :halign "start"
      :text "${weather_temp}"
    )
    (label :class "weather-degree"
      :valign "start"
      :text ""
    )
  )
)

(defwidget w_minmax []
  (box :class "weather-minmax"
    :space-evenly "false"
    :valign "center"
    :halign "end"
    :orientation "v"
    (label
      :class "weather-temph ${
        weather_temp < 32 ? 'less' :
        weather_temp > 90 ? 'more' :
                            ''
      }"
      :text " ${weather_temph}"
    )
    (label
      :class "weather-templ ${
        weather_temp < 32 ? 'less' :
        weather_temp > 90 ? 'more' :
                            ''
      }"
      :text " ${weather_templ}"
    )
  )
)

(defwidget w_main []
  (box :orientation "h"
    :class "weather-main"
    (w_sun)
    (box :orientation "v"
      :space-evenly "false"
      (w_temp)
      (label :class "weather-desc"
        :halign "center"
        :justify "center"
        :text weather_desc
      )
    )
    (w_minmax)
  )
)

(defwidget w_feel []
  (box :orientation "v"
    :space-evenly "false"
    :class "weather-section weather-feel"
    (label 
      :class "w-feel-icon ${
        weather_feels_like < 32 ? 'less' :
        weather_feels_like > 90 ? 'more' : 
                                  ''
      }"
      :text "${
        weather_feels_like < 32 ? '' :
        weather_feels_like > 90 ? '' :
                                  ''
      }"
    )
    (label :class "w-feel-data"
      :text "${weather_feels_like}"
    )
    (label :class "w-feel-text"
      :text "Feels like"
    )
  )
)

(defwidget w_humidity []
  (box :orientation "v"
    :space-evenly "false"
    :class "weather-section weather-humidity"
    (label 
      :class "w-humidity-icon ${
        weather_humidity < 30 ? 'less' :
        weather_humidity > 60 ? 'more' : 
                                ''
      }"
      :text "󰖎"
    )
    (label :class "w-humidity-data"
      :text "${weather_humidity}󰏰"
    )
    (label :class "w-humidity-text"
      :text "Humidity"
    )
  )
)

(defwidget w_wind []
  (box :orientation "v"
    :space-evenly "false"
    :class "weather-section weather-wind"
    (label :class "w-wind-icon ${weather_wind > 32 ? 'more' : ''}"
      :text "󰈐"
    )
    (label :class "w-wind-data"
      :text "${round(weather_wind, 1)} mph"
    )
    (label :class "w-wind-text"
      :text "Wind"
    )
  )
)

(defwidget w_cloud []
  (box :orientation "v"
    :space-evenly "false"
    :class "weather-section weather-cloud"
    (label :class "w-cloud-icon"
      :text "󰅟"
    )
    (label :class "w-cloud-data"
      :text "${weather_ccover}󰏰"
    )
    (label :class "w-cloud-text"
      :text "Cover"
    )
  )
)

(defwidget w_extras []
  (box :orientation "h"
    :class "weather-extras"
    :halign "center"
    :space-evenly "true"
    (w_feel)
    (w_humidity)
    (w_wind)
    (w_cloud)
  )
)

(defvar day_name "date +%A")

(defwidget weather_forecast_day [order]
  (box :orientation "v"
    :class "forecast-section"
    :halign "center"
    (label :class "forecast-day f-day-${order}"
      :text {
        "${formattime('${jq(forecast_file, `.list[${order}].dt`)}', '%A')}" !=
                                            "${formattime(EWW_TIME, '%A')}" ?
        "${formattime('${jq(forecast_file, `.list[${order}].dt`)}', '%A')}" :
                                                                    "Today"
      }
    )
    (label :class "forecast-date f-date-${order}"
      :text "${formattime('${jq(forecast_file, `.list[${order}].dt`)}', '%m/%d')}"
    )
    (label :class "forecast-high f-high-${order}"
      :text " ${jq(forecast_file, '.list[${order}].temp.max')}"
    )
    (label :class "forecast-low f-low-${order}"
      :text " ${jq(forecast_file, '.list[${order}].temp.min')}"
    )
    (label :class "forecast-desc f-high-${order}"
      ; The replace is not working, it needs to remove the quotes
      ;:text {replace("${jq(forecast_file, '.list[${order}].weather[].main')}", '/[Rain]/g', '')}
      :text "${jq(forecast_file, '.list[${order}].weather[].main')}"
    )
  )
)


(defwidget w_forecast []
  (box :orientation "h"
    :class "forecast-box"
    :halign "center"
    :space-evenly "true"
    (weather_forecast_day
      :order "0"
    )
    (weather_forecast_day
      :order "1"
    )
    (weather_forecast_day
      :order "2"
    )
    (weather_forecast_day
      :order "3"
    )
  )
)

(defwidget aqi_breakdown [label max value]
  (box :orientation "v"
    (label :xalign "0" :text "${label}")
    (scale :min 0 :max "${max}"
      :active "false"
      :value value
      :class "aqi-bar ${label}"
    )
    (label :xalign "1" :text "${value} µg/m³")
  )
)

(defwidget air_quality []
  (box :orientation "h"
    :class "aqi-box"
    (box :orientation "v"
      :class "aqi-main"
      (label :yalign "0"
        :class "aqi-label"
        :text "Air Quality"
      )
      (circular-progress
        :value "${
          aqi_num == 1 ? 16 :
          aqi_num == 2 ? 32 :
          aqi_num == 3 ? 48 :
          aqi_num == 4 ? 64 :
          aqi_num == 5 ? 80 :
                         0
        }"
        :start-at "35"
        :thickness "8"
        :class "aqi-progress"
        :style "color: ${aqi_color}"
        (label :xalign "0.5" :yalign "0.5"
          :class "aqi-text"
          :text "${air_pollution}"
        )
      )
    )
    (box :orientation "v"
      :class "aqi-data"
      (aqi_breakdown :label "PM2.5"
        :max 85 :value pm25
      )
      (aqi_breakdown :label "PM10"
        :max 220 :value pm10
      )
      (aqi_breakdown :label "O3"
        :max 240 :value o3
      )
      (aqi_breakdown :label "NO2"
        :max 240 :value no2
      )
      (aqi_breakdown :label "SO2"
        :max 370 :value so2
      )
      (aqi_breakdown :label "CO"
        :max 16000 :value co
      )
    )
  )
)

(defwidget weather []
  (box :class "weather-container"
    :orientation "v"
    :space-evenly "false"
    (w_city)
    (w_main)
    (w_extras)
    (w_forecast)
    (air_quality)
  )
)

(defwindow weather
  :monitor 0
  :geometry (geometry
    :x "2px"
    :y "2px"
    :width "370px"
    :anchor "top right")
  :stacking "overlay"
  :exclusive "false"
  :focusable "false"
  (box :class "weather"
    (weather)
  )
)

(defwindow weather-closer
  :monitor 0
  :geometry (geometry
    :width "150%"
    :height "150%")
  :stacking "fg"
  :exclusive "false"
  :focusable "false"
  (closer :window "weather")
)
