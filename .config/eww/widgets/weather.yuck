(defwidget w_main []
  (box :class "w_main"
    :orientation "v"
    :space-evenly "false"
    (label :class "w_desc"
      :text "${w_desc}")
    (label :class "w_temp"
      :text "${round(w_temp, 0)}")
    (label :class "w_feeltemp"
      :text "Feels like ${round(w_feeltemp, 0)}")
    (box :class "w_hilo"
      :orientation "h"
      :space-evenly "false"
      :halign "center"
      (label :class "w_day"
        :text "Day: ${ceil(w_day)}")
      (label :class "w_spacer"
        :text "  ")
      (label :class "w_night"
        :text "Night: ${floor(w_night)}")
    )
  )
)

(defwidget w_alert []
  (box :class "w_alert ${w_alert == "null" ? "empty" : "alert"}"
    :orientation "h"
    :space-evenly "false"
    (label :class "w_alert_icon"
      :text "${w_alert == "null" ? "" : " "}")
    (box :orientation "v"
      (label :class "w_alert_name"
        :xalign 0
        :text "${w_alert == "null" ? "" : w_alert}")
      (label :class "w_alert_time"
        :xalign 0
        :text "${
          w_alert_start == "null" ? "" :
            formattime(w_alert_start, "%b %d, %I:%M %p")}")
    )
  )
)

(defwidget w_airquality []
  (box :class "w_aqi"
    :orientation "v"
    (circular-progress :class "aqi-progress ${
        aqi_num == 1 ? "aqi-good" :
        aqi_num == 2 ? "aqi-fair" :
        aqi_num == 3 ? "aqi-moderate" :
        aqi_num == 4 ? "aqi-poor" :
        aqi_num == 5 ? "aqi-very-poor" :
                       ""}"
      :value "${
        aqi_num == 1 ? 16 :
        aqi_num == 2 ? 32 :
        aqi_num == 3 ? 48 :
        aqi_num == 4 ? 64 :
        aqi_num == 5 ? 80 :
                       0}"
      :start-at "35"
      :thickness "8"
      (box :class "aqi-info"
        :orientation "v"
        :space-evenly "false"
        (label :class "aqi-label"
          :text "Air quality")
        (label :class "aqi-desc"
          :text "${
            aqi_num == 1 ? "Good" :
            aqi_num == 2 ? "Fair" :
            aqi_num == 3 ? "Moderate" :
            aqi_num == 4 ? "Poor" :
            aqi_num == 5 ? "Very Poor" :
                           "Unknown"}")
      )
    )
  )
)
  
(defwidget w_humidity []
  (box :class "w_hum"
    :orientation "v"
    :style "background-image:
      linear-gradient(
        to bottom,
        rgb(40, 42, 54) ${100 - w_hum}%,
        rgb(189, 147, 249) ${100 - w_hum}%)"
    (label :class "w_hum_label"
      :xalign 0
      :yalign 0
      :text "  Humidity")
    (label :class "w_hum_perc"
      :xalign 0
      :text "${w_hum}󱉸")
    (label :class "w_hum_dew"
      :xalign 0
      :yalign 1
      :text "${round(w_dew, 0)} dew point")
  )
)

(defwidget w_sun []
  (box :class "w_sun"
    :orientation "v"
    :style "background-image:
      radial-gradient(rgb(255, 184, 108) ${
        EWW_TIME < w_sunr || EWW_TIME > w_suns ? 0 :
        (EWW_TIME - w_sunr <= (w_suns - w_sunr)/2 ?
          (EWW_TIME - w_sunr)/((w_suns - w_sunr)/2)*100 :
        (w_suns - EWW_TIME)/((w_suns - w_sunr)/2)*100)
      }%, rgb(40, 42, 54) ${
        EWW_TIME < w_sunr || EWW_TIME > w_suns ? 0 :
        (EWW_TIME - w_sunr <= (w_suns - w_sunr)/2 ?
          (EWW_TIME - w_sunr)/((w_suns - w_sunr)/2)*100 :
        (w_suns - EWW_TIME)/((w_suns - w_sunr)/2)*100)
      }%, rgba(30, 31, 41, 230));"
    (box :orientation "h"
      :space-evenly "false"
      (label :class "w_sun_label ${
        EWW_TIME < w_sunr || EWW_TIME > w_suns ? "night" : "day"}"
        :xalign 0
        :yalign 0
        :text "")
      (label :class "w_sun_label"
        :xalign 0
        :yalign 0
        :text "Sun")
    )
    (label :class "w_sun_data"
      :yalign 1
      :text "${formattime(w_sunr, "%I:%M%p")}-${formattime(w_suns, "%I:%M%p")}")
    (box :orientation "h"
      :space-evenly "false"
      (label :class "w_sun_info ${
        EWW_TIME < w_sunr || EWW_TIME > w_suns ? "night" :
        w_uvi <= 2  ? "low" :
        w_uvi <= 5  ? "moderate" :
        w_uvi <= 7  ? "high" :
        w_uvi <= 10 ? "veryhigh" :
                      "extreme"}"
        :yalign 1
        :text "${EWW_TIME < w_sunr || EWW_TIME > w_suns ? "󰌵 " : "󰛨 "}")
      (label :class "w_sun_info"
        :yalign 1
        :text "UV index ${round(w_uvi, 0)}")
    )
  )
)

(defwidget w_moon []
  (box :class "w_moon"
    :orientation "v"
    :style "background-image:
      radial-gradient(rgb(98, 114, 164) ${
        EWW_TIME < w_moonr || EWW_TIME > w_moons ? 0 :
        (EWW_TIME - w_moonr <= (w_moons - w_moonr)/2 ?
          (EWW_TIME - w_moonr)/((w_moons - w_moonr)/2)*100 :
        (w_moons - EWW_TIME)/((w_moons - w_moonr)/2)*100)
      }%, rgb(40, 42, 54) ${
        EWW_TIME < w_moonr || EWW_TIME > w_moons ? 0 :
        (EWW_TIME - w_moonr <= (w_moons - w_moonr)/2 ?
          (EWW_TIME - w_moonr)/((w_moons - w_moonr)/2)*100 :
        (w_moons - EWW_TIME)/((w_moons - w_moonr)/2)*100)
      }%, rgba(30, 31, 41, 230));"
    (box :orientation "h"
      :space-evenly "false"
      (label :class "w_moon_label icon ${
        EWW_TIME < w_moonr || EWW_TIME > w_moons ? "day" : "night"}"
        :xalign 0
        :yalign 0
        :text "${
          w_moonphase == 0    ? "" :
          w_moonphase < 0.04  ? "" :
          w_moonphase < 0.08  ? "" :
          w_moonphase < 0.12  ? "" :
          w_moonphase < 0.16  ? "" :
          w_moonphase < 0.20  ? "" :
          w_moonphase < 0.25  ? "" :
          w_moonphase == 0.25 ? "" :
          w_moonphase < 0.29  ? "" :
          w_moonphase < 0.33  ? "" :
          w_moonphase < 0.37  ? "" :
          w_moonphase < 0.41  ? "" :
          w_moonphase < 0.45  ? "" :
          w_moonphase < 0.5   ? "" :
          w_moonphase == 0.5  ? "" :
          w_moonphase < 0.54  ? "" :
          w_moonphase < 0.58  ? "" :
          w_moonphase < 0.61  ? "" :
          w_moonphase < 0.66  ? "" :
          w_moonphase < 0.70  ? "" :
          w_moonphase < 0.75  ? "" :
          w_moonphase == 0.75 ? "" :
          w_moonphase < 0.79  ? "" :
          w_moonphase < 0.83  ? "" :
          w_moonphase < 0.87  ? "" :
          w_moonphase < 0.91  ? "" :
          w_moonphase < 0.95  ? "" :
          w_moonphase < 1     ? "" :
          w_moonphase == 1    ? "" :
                            w_moonphase}")
      (label :class "w_moon_label"
        :xalign 0
        :yalign 0
        :text "Moon")
    )
    (label :class "w_moon_data"
      :yalign 1
      :text "${formattime(w_moonr, "%I:%M%p")}-${formattime(w_moons, "%I:%M%p")}")
    (label :class "w_moon_info"
      :yalign 1
      :text "${
      w_moonphase == 0    ? "New Moon" :
      w_moonphase < 0.25  ? "Waxing Crescent" :
      w_moonphase == 0.25 ? "First Quarter" :
      w_moonphase < 0.5   ? "Waxing Gibbous" :
      w_moonphase == 0.5  ? "Full Moon" :
      w_moonphase < 0.75  ? "Waning Gibbous" :
      w_moonphase == 0.75 ? "Last Quarter" :
      w_moonphase < 1     ? "Waning Crescent" :
                            "Moon Phase"}")
  )
)

(defwidget w_wind []
  (box :class "w_wind"
    :orientation "v"
    :style "background:
      linear-gradient(${w_winddeg + 180 + 60}deg,
        rgb(98, 114, 164) 50%, transparent 50%) top left,
      linear-gradient(${w_winddeg + 180 - 60}deg,
        rgb(98, 114, 164) 50%, transparent 50%) top right;"
    (label :class "w_wind_label"
      :text " Wind")
    (label :class "w_wind_speed"
      :text "${round(w_wind, 0)}mph")
    (label :class "w_wind_gust"
      :text "Gusts: ${w_windg == "null" ? round(w_wind, 0) : round(w_windg, 0)}mph")
  )
)

(defwidget w_rain []
  (box :class "w_rain"
    :orientation "v"
    (label :class "w_rain_label"
      :xalign 0
      :yalign 0
      :text "󰖗 Rain")
    (label :class "w_rain_speed"
      :xalign 0
      :text "${w_rain == "null" ? "0" : round(w_rain * (1 / 25.4), 2)}in")
    (label :class "w_rain_daily"
      :xalign 0
      :yalign 1
      :text "Daily Rain")
  )
)


(defwidget w_data []
  (box :orientation "v"
    (box :orientation "h"
      (w_airquality)
      (w_humidity)
    )
    (box :orientation "h"
      (w_sun)
      (w_moon)
    )
    (box :orientation "h"
      (w_wind)
      (w_rain)
    )
  )
)

(defwindow weather
  :monitor 0
  :geometry 
    (geometry
      :x "3px"
      :y "3px"
      :anchor "top left")
  :stacking "fg"
  :exlusive "false"
  :focusable "none"
  (revealer :transition "slidedown"
    :reveal weather
    :class "weather"
    (box
      :orientation "v"
      :space-evenly "false"
      (w_main)
      (w_alert)
      (w_data)
    )
  )
)
