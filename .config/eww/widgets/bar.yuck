;; Left Modules

; Power Menu
(defwidget power []
  (eventbox
    :onhover "${EWW_CMD} update power=true"
    :onhoverlost "${EWW_CMD} update power=false"
    (box :class "b_power"
      :space-evenly "false"
      :orientation "h"
      (button :class "b_but_shutdown"
        :tooltip "Shut down"
        :onclick "systemctl poweroff" "")
        (revealer :transition "slideright"
          :reveal power
          (box :orientation "h"
            :space-evenly "false"
            (button :class "b_but_reboot"
              :tooltip "Reboot"
              :onclick "systemctl reboot" "󰜉")
            (button :class "b_but_sleep"
              :tooltip "Suspend"
              :onclick "systemctl suspend-then-hibernate" "󰒲")
            (button :class "b_but_logoff"
              :tooltip "Logoff"
              :onclick "niri msg action quit --skip-confirmation" "󰍃")
        )
      )
    )
  )
)

; Clock
(defwidget clock []
  (box :class "b_clock"
    :orientation "h"
    :space-evenly "false"
    :tooltip "${formattime(EWW_TIME, "%a, %b %d")}"
    (label :class "b_clock_icon"
      :text "")
    (label :class "b_clock_time"
      :text "${formattime(EWW_TIME, "%I:%M %p")}")
  )
)

; Weather
(defwidget weather []
  (button :onclick "${weather == "true" ?
    "sh -c '${EWW_CMD} update weather=false;
      (sleep 0.4 && ${EWW_CMD} close weather) &'" :
    "${EWW_CMD} open weather && ${EWW_CMD} update weather=true"}"
    (box :class "b_weather ${
      w_temp >= 90 ? "hot":
      w_temp <= 32 ? "cold" : ""}"
      :tooltip "Weather Info"
      (label :class "b_weather_icon"
        :text "${
          w_icon == "01d" ? "󰖙" :
          w_icon == "01n" ? "󰖔" :
          w_icon == "02d" ? "󰖕" :
          w_icon == "02n" ? "󰼱" :
          w_icon == "03d" || w_icon == "03n" ||
          w_icon == "04n" || w_icon == "04d" ? "󰖐" :
          w_icon == "09d" || w_icon == "09n" ||
          w_icon == "10d" || w_icon == "10n" ? "󰖗" :
          w_icon == "11d" || w_icon == "11n" ? "󰖓" :
          w_icon == "13d" || w_icon == "13n" ? "󰖘" :
          w_icon == "50d" || w_icon == "50n" ? "󰖑" :
                                               "" }")
      (label :class "b_weather_temp"
        :text "${round(w_temp, 0)}")
    )
  )
)

(defwidget left []
  (box :class "b_left"
    :orientation "h"
    :space-evenly "false"
    :halign "start"
    (power)
    (clock)
    (weather)
  )
)

;; Center Modules
(defwidget center []
  (box :class "b_center"
    :orientation "h"
    :halign "center"
    (label :text "")
  )
)

;; Rigth Modules

; Volume Icon
(defwidget volume []
  (button :class "b_container b_volume"
    :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
    (box :orientation "h"
      :space-evenly "false"
      (label :class "b_cont_icon b_vol_icon ${
          mute == "[MUTED]" ? "mute" : ""}"
        :text "${
          mute   == "[MUTED]" ? "" :
          volume >= 50        ? "" :
                                "" }")
      (label :class "b_cont_info b_vol_info"
        :text "${volume}")
    )
  )
)

; Network Icon
(defwidget network []
  (button :class "b_container b_network"
    :onclick "nm-connection-editor &"
    (box :orientation "h"
      :space-evenly "false"
      (label :class "b_cont_icon b_net_icon ${net.class}"
        :text "${net.icon}")
      (label :class "b_cont_info b_net_info"
        :text "${net.name}")
    )
  )
)

; Backlight Brightness
(defwidget backlight []
  (button :class "b_container b_backlight"
    (box :orientation "h"
      :space-evenly "false"
      (label :class "b_cont_icon b_brit_icon"
        :text "${
          brightness >= 75 ? "󰃠" :
          brightness >= 50 ? "󰃟" :
          brightness >= 25 ? "󰃞" :
                             "󰃝" }")
      (label :class "b_cont_info b_brit_info"
        :text "${brightness}")
    )
  )
)

; Battery Icon
(defwidget battery []
  (box :class "b_container b_battery"
    :orientation "h"
    :space-evenly "false"
    :tooltip "Battery: ${EWW_BATTERY.BAT1.capacity}"
    (label :class "b_cont_icon b_bat_icon ${
      EWW_BATTERY.BAT1.status   == "Charging" ? "charging" :
      EWW_BATTERY.BAT1.capacity <=   15       ? "critical" :
      EWW_BATTERY.BAT1.capacity <=   20       ? "low" : "" }"
      :text "${
        EWW_BATTERY.BAT1.status == "Charging" ? "󰚥" : 
        EWW_BATTERY.BAT1.capacity >= 80 ? "" :
        EWW_BATTERY.BAT1.capacity >= 60 ? "" :
        EWW_BATTERY.BAT1.capacity >= 40 ? "" :
        EWW_BATTERY.BAT1.capacity >= 20 ? "" :
                                          "" }")
    (label :class "b_cont_info b_bat_info"
      :text "${EWW_BATTERY.BAT1.capacity}")
  )
)

(defwidget right []
  (box :class "b_right"
    :orientation "h"
    :halign "end"
    :space-evenly "false"
    ;;(bluetooth)
    (volume)
    (network)
    (backlight)
    (battery)
  )
)

(defwindow bar
  :monitor 0
  :geometry (geometry
              :x "0"
              :y "0"
              :width "100%"
              :anchor "top center")
  :stacking "fg"
  :exclusive "true"
  (centerbox :class "eww_bar"
    :orientation "h"
    (left)
    (center)
    (right)
  )
)
